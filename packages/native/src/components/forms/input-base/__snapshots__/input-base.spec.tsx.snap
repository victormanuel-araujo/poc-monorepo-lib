// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InputBase component should render correctly 1`] = `
<View
  accessible={true}
  fluid={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      },
      false,
      undefined,
    ]
  }
>
  <View
    backgroundShade="base"
    dir="column"
    display="flex"
    onLayout={[Function]}
    position="relative"
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "minHeight": 54,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      }
    }
  >
    <View
      backgroundShade="base"
      color="secondary"
      dir="column"
      display="flex"
      position="relative"
      style={
        Object {
          "backgroundColor": "#7D38DB",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "left": 0,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
      testID="input-base-shadow"
    />
    <View
      focused={false}
      spacing="md"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(218, 218, 218, 1)",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "display": "flex",
          "flexDirection": "row",
          "minHeight": 54,
          "paddingBottom": 2,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 2,
          "position": "relative",
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
          "width": "100%",
        }
      }
    >
      <View
        backgroundShade="base"
        dir="column"
        display="flex"
        position="relative"
        style={
          Object {
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "position": "relative",
            "width": "100%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          color="secondary"
          editable={true}
          keyboardType="default"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "color": "#000000",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
              Object {},
            ]
          }
          testID="input-base"
          type="text"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`InputBase component should render the adornment correctly 1`] = `
<View
  accessible={true}
  fluid={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      },
      false,
      undefined,
    ]
  }
>
  <View
    backgroundShade="base"
    dir="column"
    display="flex"
    onLayout={[Function]}
    position="relative"
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "minHeight": 54,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      }
    }
  >
    <View
      backgroundShade="base"
      color="secondary"
      dir="column"
      display="flex"
      position="relative"
      style={
        Object {
          "backgroundColor": "#7D38DB",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "left": 0,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
      testID="input-base-shadow"
    />
    <View
      focused={false}
      spacing="md"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "rgba(218, 218, 218, 1)",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "display": "flex",
          "flexDirection": "row",
          "minHeight": 54,
          "paddingBottom": 2,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 2,
          "position": "relative",
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
          "width": "100%",
        }
      }
    >
      <View
        alignment="center"
        backgroundShade="base"
        dir="column"
        display="flex"
        justifyContent="center"
        paddingBottom={0}
        paddingLeft={0}
        paddingTop={0}
        position="relative"
        spacing="sm"
        style={
          Object {
            "alignItems": "center",
            "display": "flex",
            "flexDirection": "column",
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 8,
            "paddingTop": 0,
            "position": "relative",
            "width": "auto",
          }
        }
      >
        <View
          shape="round"
          size={24}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "#000000",
                "borderRadius": 32,
                "display": "flex",
                "height": 32,
                "justifyContent": "center",
                "width": 32,
              },
            ]
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "#000000",
                  "fontSize": 24,
                },
                undefined,
                Object {
                  "fontFamily": "Material Icons",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            î¢¶
          </Text>
        </View>
      </View>
      <View
        backgroundShade="base"
        dir="column"
        display="flex"
        position="relative"
        style={
          Object {
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "position": "relative",
            "width": "100%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          color="secondary"
          editable={true}
          keyboardType="default"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "color": "#000000",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
              Object {},
            ]
          }
          testID="input-base"
          type="text"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</View>
`;

exports[`InputBase component should render the error type correctly 1`] = `
<View
  accessible={true}
  fluid={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "display": "flex",
        "flexDirection": "row",
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      },
      false,
      undefined,
    ]
  }
>
  <View
    backgroundShade="base"
    dir="column"
    display="flex"
    onLayout={[Function]}
    position="relative"
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
        "minHeight": 54,
        "paddingBottom": 0,
        "paddingLeft": 0,
        "paddingRight": 0,
        "paddingTop": 0,
        "position": "relative",
        "width": "100%",
      }
    }
  >
    <View
      backgroundShade="base"
      color="secondary"
      dir="column"
      display="flex"
      error={true}
      position="relative"
      style={
        Object {
          "backgroundColor": "#DB4446",
          "borderRadius": 8,
          "display": "flex",
          "flexDirection": "column",
          "height": "100%",
          "left": 0,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "position": "absolute",
          "top": 0,
          "width": "100%",
        }
      }
      testID="input-base-shadow"
    />
    <View
      focused={false}
      spacing="md"
      style={
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#DB4446",
          "borderRadius": 8,
          "borderStyle": "solid",
          "borderWidth": 1,
          "display": "flex",
          "flexDirection": "row",
          "minHeight": 54,
          "paddingBottom": 2,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 2,
          "position": "relative",
          "transform": Array [
            Object {
              "translateX": 0,
            },
            Object {
              "translateY": 0,
            },
          ],
          "width": "100%",
        }
      }
    >
      <View
        backgroundShade="base"
        dir="column"
        display="flex"
        position="relative"
        style={
          Object {
            "display": "flex",
            "flexBasis": 0,
            "flexDirection": "column",
            "flexGrow": 1,
            "flexShrink": 1,
            "justifyContent": "center",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "position": "relative",
            "width": "100%",
          }
        }
      >
        <TextInput
          allowFontScaling={true}
          color="secondary"
          editable={true}
          keyboardType="default"
          onBlur={[Function]}
          onChangeText={[Function]}
          onFocus={[Function]}
          rejectResponderTermination={true}
          secureTextEntry={false}
          style={
            Array [
              Object {
                "color": "#000000",
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "paddingBottom": 0,
                "paddingLeft": 0,
                "paddingRight": 0,
                "paddingTop": 0,
              },
              Object {},
            ]
          }
          testID="input-base"
          type="text"
          underlineColorAndroid="transparent"
        />
      </View>
    </View>
  </View>
</View>
`;
