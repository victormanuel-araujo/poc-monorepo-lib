{"version":3,"sources":["theme.spec.tsx"],"names":["createTheme","mockTheme","colors","primary","base","secondary","fonts","default","describe","it","theme","expect","toBe","darker","toBeUndefined","title","units"],"mappings":"AAAA,SAASA,WAAT;AAEA,MAAMC,SAA6B,GAAG;AACpCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADH;AAENC,IAAAA,SAAS,EAAE;AAAED,MAAAA,IAAI,EAAE;AAAR;AAFL,GAD4B;AAKpCE,EAAAA,KAAK,EAAE;AAAEC,IAAAA,OAAO,EAAE;AAAX;AAL6B,CAAtC;AAQAC,QAAQ,CAAC,OAAD,EAAU,MAAM;AACtBC,EAAAA,EAAE,CAAC,2CAAD,EAA8C,MAAM;AACpD,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACR,MAAN,CAAaC,OAAb,CAAqBC,IAAtB,CAAN,CAAkCQ,IAAlC,CAAuC,SAAvC;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,4FAAD,EAA+F,MAAM;AACrG,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACR,MAAN,CAAaC,OAAb,CAAqBU,MAAtB,CAAN,CAAoCC,aAApC;AACD,GAHC,CAAF;AAKAL,EAAAA,EAAE,CAAC,8CAAD,EAAiD,MAAM;AACvD,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACR,MAAN,CAAaG,SAAb,CAAuBD,IAAxB,CAAN,CAAoCQ,IAApC,CAAyC,SAAzC;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,+CAAD,EAAkD,MAAM;AACxD,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACJ,KAAN,CAAYC,OAAb,CAAN,CAA4BK,IAA5B,CAAiC,QAAjC;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,4EAAD,EAA+E,MAAM;AACrF,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACJ,KAAN,CAAYS,KAAb,CAAN,CAA0BH,IAA1B,CAA+B,SAA/B;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,wEAAD,EAA2E,MAAM;AACjF,UAAMC,KAAK,GAAGV,WAAW,CAACC,SAAD,CAAzB;AACAU,IAAAA,MAAM,CAACD,KAAK,CAACM,KAAN,CAAYZ,IAAb,CAAN,CAAyBQ,IAAzB,CAA8B,CAA9B;AACD,GAHC,CAAF;AAID,CA9BO,CAAR","sourcesContent":["import { createTheme, Theme } from '../theme'\n\nconst mockTheme: DeepPartial<Theme> = {\n  colors: {\n    primary: { base: '#ff0000' },\n    secondary: { base: '#0000ff' },\n  },\n  fonts: { default: 'Roboto' },\n}\n\ndescribe('Theme', () => {\n  it('should primary color base shade to be red', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.colors.primary.base).toBe('#ff0000')\n  })\n\n  it('should primary color darker shade to be \"undefined\", cause it was not defined in mockTheme', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.colors.primary.darker).toBeUndefined()\n  })\n\n  it('should secondary color base shade to be blue', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.colors.secondary.base).toBe('#0000ff')\n  })\n\n  it('should default font to be defined as \"Roboto\"', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.fonts.default).toBe('Roboto')\n  })\n\n  it('should title font to be defined as \"Raleway\" as set in theme default value', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.fonts.title).toBe('Raleway')\n  })\n\n  it('should the unit base to be defined as 8, as set in theme default value', () => {\n    const theme = createTheme(mockTheme)\n    expect(theme.units.base).toBe(8)\n  })\n})\n"]}