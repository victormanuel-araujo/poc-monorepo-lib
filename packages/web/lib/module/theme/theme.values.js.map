{"version":3,"sources":["theme.values.ts"],"names":["colors","primary","base","secondary","black","light","lighter","white","gray","dark","red","transparent","yellow","fonts","default","title","fontSizes","xsm","sm","md","lg","lineHeights","fontWeights","regular","medium","bold","units","header","radius","paddings","xl","xxl"],"mappings":"AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,MAAwB,GAAG;AACtCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE;AADC,GAD6B;AAItCC,EAAAA,SAAS,EAAE;AACTD,IAAAA,IAAI,EAAE;AADG,GAJ2B;AAOtCE,EAAAA,KAAK,EAAE;AACLF,IAAAA,IAAI,EAAE,SADD;AAELG,IAAAA,KAAK,EAAE,SAFF;AAGLC,IAAAA,OAAO,EAAE;AAHJ,GAP+B;AAYtCC,EAAAA,KAAK,EAAE;AACLL,IAAAA,IAAI,EAAE;AADD,GAZ+B;AAetCM,EAAAA,IAAI,EAAE;AACJN,IAAAA,IAAI,EAAE,SADF;AAEJO,IAAAA,IAAI,EAAE,SAFF;AAGJJ,IAAAA,KAAK,EAAE,SAHH;AAIJC,IAAAA,OAAO,EAAE;AAJL,GAfgC;AAqBtCI,EAAAA,GAAG,EAAE;AACHR,IAAAA,IAAI,EAAE;AADH,GArBiC;AAwBtCS,EAAAA,WAAW,EAAE;AACXT,IAAAA,IAAI,EAAE;AADK,GAxByB;AA2BtCU,EAAAA,MAAM,EAAE;AACNV,IAAAA,IAAI,EAAE;AADA;AA3B8B,CAAjC;AAgCP;AACA;AACA;;AACA,OAAO,MAAMW,KAAK,GAAG;AACnB;AACF;AACA;AACEC,EAAAA,OAAO,EAAE,SAJU;;AAKnB;AACF;AACA;AACEC,EAAAA,KAAK,EAAE;AARY,CAAd;AAWP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,GAAG,EAAE,CADkB;AAEvBC,EAAAA,EAAE,EAAE,EAFmB;AAGvBC,EAAAA,EAAE,EAAE,EAHmB;AAIvBC,EAAAA,EAAE,EAAE;AAJmB,CAAlB;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;AACzBJ,EAAAA,GAAG,EAAE,EADoB;AAEzBC,EAAAA,EAAE,EAAE,EAFqB;AAGzBC,EAAAA,EAAE,EAAE,EAHqB;AAIzBC,EAAAA,EAAE,EAAE;AAJqB,CAApB;AAOP;AACA;AACA;;AACA,OAAO,MAAME,WAAW,GAAG;AACzBC,EAAAA,OAAO,EAAE,GADgB;AAEzBC,EAAAA,MAAM,EAAE,GAFiB;AAGzBC,EAAAA,IAAI,EAAE,GAHmB;AAIzBrB,EAAAA,KAAK,EAAE;AAJkB,CAApB;AAOP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMsB,KAAK,GAAG;AACnBxB,EAAAA,IAAI,EAAE,CADa;AAEnByB,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAAd;AAMP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG;AACtBX,EAAAA,EAAE,EAAEQ,KAAK,CAACxB,IADY;AAEtBiB,EAAAA,EAAE,EAAGO,KAAK,CAACxB,IAAN,GAAa,CAFI;AAGtBkB,EAAAA,EAAE,EAAGM,KAAK,CAACxB,IAAN,GAAa,CAHI;AAItB4B,EAAAA,EAAE,EAAGJ,KAAK,CAACxB,IAAN,GAAa,CAJI;AAKtB6B,EAAAA,GAAG,EAAGL,KAAK,CAACxB,IAAN,GAAa;AALG,CAAjB","sourcesContent":["import { ThemeColorsGroup } from './theme.types'\n\n/**\n * ** IMPORTANT **\n * Remember to always use the literal type in each value, this is because, during\n * the autocomplete, the majority of IDEs can show the value of de property on this ways.\n * If this is not defined, the IDE will show the type of property as string/number\n *\n * see an example:\n * - with literal type:\n *  https://i.imgur.com/n7piYD9.png\n *\n * - without literal type:\n * https://i.imgur.com/JZ9rcI8.png\n */\n\n/**\n * Define the colors of theme\n * to add a new color in theme, remember to add the color name at ThemeColorsName\n * the shades are defined in ThemeColorsShade, remember: the base shade is the\n * only one needed\n */\nexport const colors: ThemeColorsGroup = {\n  primary: {\n    base: '#7BE26E' as '#7BE26E',\n  },\n  secondary: {\n    base: '#7D38DB' as '#7D38DB',\n  },\n  black: {\n    base: '#000000' as '#000000',\n    light: '#202020' as '#202020',\n    lighter: '#323232' as '#323232',\n  },\n  white: {\n    base: '#FFFFFF' as '#FFFFFF',\n  },\n  gray: {\n    base: '#9A9A9A' as '#9A9A9A',\n    dark: '#888888' as '#888888',\n    light: '#DADADA' as '#DADADA',\n    lighter: '#E0E0E0' as '#E0E0E0',\n  },\n  red: {\n    base: '#DB4446' as '#DB4446',\n  },\n  transparent: {\n    base: '#00000000',\n  },\n  yellow: {\n    base: '#FFBC11',\n  },\n}\n\n/**\n * Define the name of the fonts families\n */\nexport const fonts = {\n  /**\n   * Used in common text elements\n   */\n  default: 'Raleway' as 'Raleway',\n  /**\n   * Used in Titles of sections, headers and etc.\n   */\n  title: 'Raleway' as 'Raleway',\n}\n\n/**\n * Define the fonts sizes\n * this values will be used as pixels (px)\n */\nexport const fontSizes = {\n  xsm: 8 as 8,\n  sm: 12 as 12,\n  md: 16 as 16,\n  lg: 24 as 24,\n}\n\n/**\n * Define the line heights for each font size.\n * IMPORTANT: these values will be used with the fontsSizes, so you must make sure\n * that: the values are sync as in the example\n *\n * in short, if an text element use the \"md\" of fontSizes, it must use the \"md\"\n * of lineHeights too\n *\n * @example\n * ```ts\n * styled.Text`\n *    font-size: ${fontSizes.md}\n *    line-height: ${fontSizes.md}\n * `\n * ```\n */\nexport const lineHeights = {\n  xsm: 12 as 12,\n  sm: 18 as 18,\n  md: 24 as 24,\n  lg: 36 as 36,\n}\n\n/**\n * Define the fonts weights\n */\nexport const fontWeights = {\n  regular: 400 as 400,\n  medium: 500 as 500,\n  bold: 700 as 700,\n  black: 900 as 900,\n}\n\n/**\n * Define the measure units of the theme\n * any values can be defined here, these values will be used as global within\n * the theme\n *\n * @example\n * ```ts\n * const units = {\n *   base: 8 (measure base)\n *   header: 60 (header height)\n *   navigation: 70 (navigation - tabstack - height)\n * }\n * ```\n */\nexport const units = {\n  base: 8 as 8,\n  header: 60 as 60,\n  radius: 8 as 8,\n}\n\n/**\n * define the value of different sizes of padding\n * remember to always use the unit base defined before.\n */\nexport const paddings = {\n  sm: units.base,\n  md: (units.base * 2) as 16,\n  lg: (units.base * 3) as 24,\n  xl: (units.base * 4) as 32,\n  xxl: (units.base * 5) as 40,\n}\n"]}